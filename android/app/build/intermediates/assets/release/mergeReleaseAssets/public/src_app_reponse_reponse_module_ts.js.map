{"version":3,"file":"src_app_reponse_reponse_module_ts.js","mappings":"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","sources":["./src/app/reponse/reponse-routing.module.ts","./src/app/reponse/reponse.module.ts","./src/app/reponse/reponse.page.ts","./src/app/reponse/reponse.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReponsePage } from './reponse.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReponsePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReponsePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReponsePageRoutingModule } from './reponse-routing.module';\n\nimport { ReponsePage } from './reponse.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReponsePageRoutingModule\n  ],\n  declarations: [ReponsePage]\n})\nexport class ReponsePageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router'; // import Router to navigate\r\nimport { OfflineService } from '../services/offline.service'; // import service\r\nimport { PartieService } from '../services/partie.service';\r\n\r\n@Component({\r\n  selector: 'app-reponse',\r\n  templateUrl: './reponse.page.html',\r\n  styleUrls: ['./reponse.page.scss'],\r\n})\r\n\r\nexport class ReponsePage implements OnInit {\r\n\r\n  mot:string;\r\n  definition:string;\r\n  status:string;\r\n  partieEnCours:number;\r\n\r\n  constructor(private service:OfflineService, private route:Router, private onlineService:PartieService,private currentRoute:ActivatedRoute) { // inject Router & Services\r\n    this.partieEnCours = this.onlineService.partieEnCours;\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    // Get param from current Route\r\n    this.currentRoute.queryParams.subscribe(param => {\r\n        this.status = param[\"status\"];\r\n        if(this.status == \"online\"){ //If online mode\r\n        \r\n          // Get from DB : current word, correct definition\r\n          this.onlineService.getPartie(this.partieEnCours).subscribe(u => {\r\n            this.onlineService.getTour(u.manche[this.onlineService.mancheEnCours]._ID).subscribe(tableauTours=>{\r\n            this.mot = tableauTours[this.onlineService.tourEnCours].mot_choisi;\r\n            let idTour = tableauTours[this.onlineService.tourEnCours]._ID;\r\n              this.onlineService.getAllResultat(idTour).subscribe(tableauResultat => {\r\n              this.definition = this.onlineService.findDefinition(tableauResultat);\r\n              })\r\n            });\r\n          });\r\n        } else { //If online mode\r\n          this.mot = this.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].mot_choisi;\r\n          this.definition = this.service.definition;\r\n        }\r\n      });\r\n  }\r\n  \r\n  // Routing method\r\n  check(){\r\n    if(this.status == \"online\"){//if online mode\r\n      this.onlineService.getPartie(this.partieEnCours).subscribe(u => {\r\n        if (this.onlineService.tourEnCours == u.joueur.length -1){\r\n          if (this.onlineService.mancheEnCours == u.manche.length -1){\r\n            this.route.navigate(['winner-resultat'],{queryParams: {status:\"online\"}});\r\n          } else { // else, we go to a new round & reset the game turns counter\r\n            console.log(\"nouvelle manche !\");\r\n            this.onlineService.mancheEnCours++;\r\n            this.onlineService.tourEnCours=0;\r\n            this.route.navigate(['current-manche-online']);\r\n          }\r\n        } else { // else, if there ARE game turns left, we go to the next game turn\r\n          console.log(\"nouveau tour !\");\r\n          this.onlineService.tourEnCours++;\r\n          this.route.navigate(['online-definition']);\r\n        };\r\n      });\r\n    }else {//if offline mode\r\n      if (this.service.toursEnCours == this.service.joueurs.length -1){\r\n        // if there are no more rounds left, we display the winner\r\n        if (this.service.mancheEnCours == this.service.manches.length -1){\r\n          this.route.navigate(['winner-resultat']);\r\n        } else { // else, we go to a new round & reset the game turns counter\r\n          this.service.mancheEnCours++;\r\n          this.service.toursEnCours=0;\r\n          this.route.navigate(['current-manche'])\r\n        }\r\n      } else { // else, if there ARE game turns left, we go to the next game turn\r\n        this.service.toursEnCours++;\r\n        this.route.navigate(['select-mj']);\r\n      }\r\n    }\r\n    // tests if there are no game turns left.\r\n\r\n  }\r\n}","export default \"<ion-content (click)=\\\"check()\\\">\\r\\n    <ion-grid>\\r\\n        <ion-row>\\r\\n            <ion-col>\\r\\n                <h1>RÉPONSE</h1>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col>\\r\\n                <!-- word-->\\r\\n                <h2>{{mot}}</h2>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col>\\r\\n                <h3>La bonne définition était :</h3>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col>\\r\\n                <!--good definition-->\\r\\n                <p>\\\"{{definition}}\\\"</p>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <!-- <ion-row>\\r\\n            <ion-col size = \\\"4\\\">\\r\\n                <img src=\\\"../../assets/reponse.png\\\">\\r\\n            </ion-col>\\r\\n        </ion-row> -->\\r\\n        <div id=\\\"imgCol\\\"></div>\\r\\n    </ion-grid>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}
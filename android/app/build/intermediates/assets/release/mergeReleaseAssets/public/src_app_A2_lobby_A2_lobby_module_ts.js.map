{"version":3,"file":"src_app_A2_lobby_A2_lobby_module_ts.js","mappings":"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","sources":["./src/app/A2_lobby/A2_lobby-routing.module.ts","./src/app/A2_lobby/A2_lobby.module.ts","./src/app/A2_lobby/A2_lobby.page.ts","./src/app/A2_lobby/A2_lobby.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { A2_LobbyPage } from './A2_lobby.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: A2_LobbyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LobbyPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LobbyPageRoutingModule } from './A2_lobby-routing.module';\r\n\r\nimport { A2_LobbyPage } from './A2_lobby.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LobbyPageRoutingModule\r\n  ],\r\n  declarations: [A2_LobbyPage]\r\n})\r\nexport class LobbyPageModule {}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, IonButton, IonChip } from '@ionic/angular';\r\nimport { Joueur } from '../classes/joueur';\r\nimport { Partie } from '../classes/partie';\r\nimport { PartieService } from '../services/partie.service';\r\n\r\n@Component({\r\n  selector: 'app-lobby',\r\n  templateUrl: './A2_lobby.page.html',\r\n  styleUrls: ['./A2_lobby.page.scss'],\r\n})\r\nexport class A2_LobbyPage implements OnInit {\r\n\r\n\r\n  @ViewChildren(IonChip) chips:QueryList<IonChip>;\r\n  @ViewChild(\"button\") button:IonButton;\r\n  \r\n  votes : number;\r\n  joueurs:Array<Joueur>=[]; // initialize array\r\n  IDPartie : number;\r\n  maPartie : Partie;\r\n\r\n  constructor(private service:PartieService, private router : Router, private alert:AlertController) {\r\n    // retrieve current game from DB\r\n    this.service.getPartie(this.service.partieEnCours).subscribe(u => {\r\n      this.IDPartie = u.id;\r\n      this.joueurs = u.joueur;\r\n      this.maPartie = u;\r\n      this.votes = this.chips.length; //Retrieves total number of votes from total number of ion-chip elements\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    //all the players are waiting for the new players coming in the game ... \r\n    this.waitingPlayers(this.service,this.router,this.chips);\r\n  }\r\n  \r\n  //button function from HTML -> \"Démarrer\" - Game host can start the game even if all the players expected are not connected ... \r\n  click(button:boolean){\r\n    if (button == true){\r\n      this.alert.create({ //if he clicks on the \"Démarrer\" button: alert !\r\n        header:\"Attention\",\r\n        subHeader:\"Tous les joueurs ne sont pas encore connectés\",\r\n        message:\"Etes-vous sûr de vouloir lancer la partie avec les joueurs actuellement connectés ?\",\r\n        buttons:[\r\n          {text:\"J'annule et j'attends\",handler:()=>{}}, //he can choose to cancel and wait ...\r\n          {text:'Je confirme',handler:()=>{this.launchPartie()}} // or to confirm and start the game -> go to OK()\r\n        ]\r\n      }).then( res=>{\r\n        res.present();\r\n      })\r\n    }\r\n  }\r\n\r\n  launchPartie(){\r\n    this.service.createTour(this.service.partieEnCours).subscribe(() => { //creation of set and resultat for the current game\r\n      this.router.navigate(['current-manche-online']);\r\n      // //we can delete the players without name in the DB, then go to the current-manche-online page.\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //all the players are waiting for the new players coming in the game ... \r\n  waitingPlayers(service:PartieService,router:Router,chips:QueryList<IonChip>){\r\n    setTimeout(()=>{\r\n      console.log(\"check\");\r\n      service.getPartie(service.partieEnCours).subscribe(partie=> //retreive the current game from DB\r\n        {\r\n          this.joueurs = partie.joueur; //all the players expected\r\n          this.votes = chips.length; // all the players connected\r\n          if (this.votes > 1){ //if the game host is alone, he can't start the game\r\n            this.button.disabled = false; //the button is disabled\r\n          }\r\n          if(this.votes == this.joueurs.length){//when all the players expected are connected ...\r\n            this.launchPartie(); //-> go to launchPartie()\r\n          } else {\r\n            this.waitingPlayers(service,router,chips);//else, the current player have to wait ...\r\n          }\r\n        });\r\n    },1000);\r\n  };\r\n\r\n\r\n}\r\n","export default \"<ion-content>\\r\\n    <ion-grid>\\r\\n        <ion-row>\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n                <h1>JOUEURS CONNECTES</h1>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"ion-text-center\\\">\\r\\n              <!-- Game's number to give to another players to play online-->\\r\\n              <h3>Numéro de la partie : {{IDPartie}}</h3>\\r\\n          </ion-col>\\r\\n      </ion-row>\\r\\n        <ion-row *ngFor=\\\"let joueur of joueurs;let index = index\\\">\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n                <!-- chips of all the players connected -->\\r\\n                <ion-chip *ngIf=\\\"joueur.nom_joueur != null\\\">\\r\\n                    <ion-avatar>\\r\\n                        <img src=\\\"../../assets/avatarexemple.jpg\\\">\\r\\n                    </ion-avatar>\\r\\n                    <ion-label>\\r\\n                        {{joueur.nom_joueur}}\\r\\n                    </ion-label>\\r\\n                </ion-chip>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n                <!-- number of players connected / number of players expected-->\\r\\n                {{votes}}/{{joueurs.length}}\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n                <!-- the button is disabled when the game's Master is alone-->\\r\\n                <ion-button (click)=\\\"click(true)\\\" disabled=\\\"true\\\" #button>Démarrer</ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"src_app_A1_online-host-create_A1_online-host-create_module_ts.js","mappings":"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","sources":["./src/app/A1_online-host-create/A1_online-host-create-routing.module.ts","./src/app/A1_online-host-create/A1_online-host-create.module.ts","./src/app/A1_online-host-create/A1_online-host-create.page.ts","./src/app/classes/partie.ts","./src/app/A1_online-host-create/A1_online-host-create.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { A1_OnlineHostCreatePage } from './A1_online-host-create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: A1_OnlineHostCreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OnlineHostCreatePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OnlineHostCreatePageRoutingModule } from './A1_online-host-create-routing.module';\r\n\r\nimport { A1_OnlineHostCreatePage } from './A1_online-host-create.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    OnlineHostCreatePageRoutingModule\r\n  ],\r\n  declarations: [A1_OnlineHostCreatePage]\r\n})\r\nexport class OnlineHostCreatePageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, IonInput, IonRange } from '@ionic/angular';\r\nimport { Joueur } from '../classes/joueur';\r\nimport { Partie } from '../classes/partie';\r\nimport { PartieService } from '../services/partie.service';\r\n\r\n@Component({\r\n  selector: 'app-online-host-create',\r\n  templateUrl: './A1_online-host-create.page.html',\r\n  styleUrls: ['./A1_online-host-create.page.scss'],\r\n})\r\nexport class A1_OnlineHostCreatePage implements OnInit {\r\n\r\n  @ViewChild('playerCount') nbr_joueur : IonRange;\r\n  @ViewChild('playername') name_joueur: IonInput;\r\n  @ViewChild('nbrManche') nbr_manche : IonRange;\r\n\r\n  constructor(private service : PartieService, private router : Router, private alert:AlertController) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //button to validate the creation of the new game with : number of players, numbers of round and name of the game host\r\n  OK(){\r\n    if (this.name_joueur.value == \"\"){//if the input is empty -> alert !\r\n      this.alert.create({\r\n        header:\"Erreur\",\r\n        message:\"Merci de saisir votre nom !\",\r\n        buttons:['OK']\r\n      }).then( res=>{\r\n        res.present();\r\n      })\r\n    } else { //if all input ok\r\n      //initialization of the new game object\r\n      let maPartie = new Partie;\r\n      maPartie.mancheEnCours = 0;\r\n      maPartie.tourEnCours = 0;\r\n      maPartie.joueur = [];\r\n\r\n      //create the Joueur object\r\n      let monJoueur = new Joueur(0,\"\",0,\"\");\r\n      this.service.joueurEnCours = 0;\r\n\r\n      //attribute the value of the input (name of the player)\r\n      monJoueur.nom_joueur = String(this.name_joueur.value);\r\n      \r\n      maPartie.joueur.push(monJoueur);\r\n      maPartie.joueur.length = Number(this.nbr_joueur.value);\r\n\r\n      //initialise the number of round (Manche Array's length)\r\n      maPartie.manche = [];\r\n      maPartie.manche.length = Number(this.nbr_manche.value);\r\n\r\n      //create the game in DB\r\n      this.service.createPartie(maPartie).subscribe((reponse)=>{\r\n        this.service.partieEnCours = reponse;\r\n        //go to lobby page\r\n        this.router.navigate(['lobby']);\r\n      });\r\n    }\r\n  }\r\n}","import { Joueur } from \"./joueur\";\r\nimport { Manche } from \"./manche\";\r\n\r\n\r\nexport class Partie {\r\n    id:number;\r\n    joueur: Array<Joueur>;\r\n    manche: Array<Manche>;\r\n    mancheEnCours : number;\r\n    tourEnCours : number;\r\n \r\n\r\n}\r\n  ","export default \"<ion-content>\\r\\n    <ion-grid>\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n            <ion-col class=\\\"ion-text-center\\\" size=\\\"8\\\">\\r\\n            <h1>NOMBRE DE JOUEURS</h1>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n            <ion-col size=\\\"8\\\">\\r\\n            <!-- Use ion-Range to display a slider to select number of players. ionChange will execute a method at each change of slider's value.  -->\\r\\n            <ion-range min=\\\"2\\\" max=\\\"12\\\" step=\\\"1\\\" snaps=\\\"true\\\" [pin]=\\\"true\\\" value=\\\"2\\\" #playerCount>\\r\\n                <ion-label slot=\\\"start\\\"><h3>2</h3></ion-label>\\r\\n                <ion-label slot=\\\"end\\\"><h3>12</h3></ion-label>\\r\\n            </ion-range>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n            <ion-col size=\\\"8\\\">\\r\\n                <!--player's name-->\\r\\n                <ion-input placeholder=\\\"Votre nom\\\" #playername></ion-input>        \\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n            <ion-col class=\\\"ion-text-center\\\" size=\\\"8\\\">\\r\\n                <h1>NOMBRE DE MANCHES</h1>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\r\\n            <ion-col size=\\\"8\\\">\\r\\n                <!-- Use ion-Range to display a slider to select number of rounds. We set the value at 1, so if user doesn't interact with slider, we still have at least 1 round ! -->\\r\\n                <ion-range min=\\\"1\\\" max=\\\"10\\\" step=\\\"1\\\" snaps=\\\"true\\\" [pin]=\\\"true\\\" #nbrManche value=\\\"1\\\">\\r\\n                    <ion-label slot=\\\"start\\\"><h3>1</h3></ion-label>\\r\\n                    <ion-label slot=\\\"end\\\"><h3>10</h3></ion-label>\\r\\n                </ion-range>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-justify-content-end\\\">\\r\\n            <ion-button (click)=\\\"OK()\\\">OK</ion-button>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"src_app_C5_definition-joueur_C5_definition-joueur_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEe;AAEtE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAuB;KACnC;CACF,CAAC;IAMW,iCAAiC,SAAjC,iCAAiC;CAAG;AAApC,iCAAiC;IAJ7C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACF;AAEA;AAE6C;AAEpB;AAEhB;IAazC,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAXtC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,mGAAiC;YACjC,yDAAY;SACb;QACD,OAAO,EAAE,CAAC,yDAAY,CAAC;QACvB,YAAY,EAAE,CAAC,+EAAuB,CAAC;KACxC,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACvBW;AACW,CAAC,gBAAgB;AACZ,CAAC,wBAAwB;AAClD,CAAC,gBAAgB;IAQ7C,uBAAuB,SAAvB,uBAAuB;IAOlC,uGAAuG;IACvG,YAAoB,OAAsB,EAAS,eAA+B,EAAU,MAAc,EAAU,KAAqB;QAArH,YAAO,GAAP,OAAO,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAHvI,gBAAW,GAAQ,CAAC,CAAC;IAGsH,CAAC;IAE9I,QAAQ;QACN,qCAAqC;QACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC;QACxG,4BAA4B;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACpC,yCAAyC;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IACtG,CAAC;IAED,kBAAkB;IAClB,OAAO,CAAC,KAAY;QACpB,YAAY;QACV,IAA6B,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAC,KAAK,CAAE,CAAC,KAAK,IAAI,EAAE,EAAC;YACpF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAChB,MAAM,EAAC,QAAQ;gBACf,OAAO,EAAC,kCAAkC;gBAC1C,OAAO,EAAC,CAAC,IAAI,CAAC;aACf,CAAC,CAAC,IAAI,CAAE,GAAG,GAAE;gBACZ,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC,CAAC;SACH;aAAM;YACR,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,wBAAwB;YAC5C,oEAAoE;YACpE,KAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACtC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,EAAC;oBACpH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAA4B,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAC,KAAK,CAAE,CAAC,KAAK,CAAC;iBACvL;aACD;YAED,4BAA4B;YAC5B,iHAAiH;YACjH,iCAAiC;YAEjC,qHAAqH;YACrH,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAE,CAAC,EAAC;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAC/B;iBAAM;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAC/B;SACD;IACF,CAAC;IAED,gBAAgB;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;CACD;;YAnEQ,qEAAc;YACG,2DAAe;YAChC,mDAAM;YADN,2DAAe;;AASX,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,gLAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAyDnC;AAzDmC;;;;;;;;;;;;;;;ACXpC,iEAAe,wNAAwN,kTAAkT,kBAAkB,KAAK,mBAAmB,8EAA8E,KAAK,2JAA2J,6BAA6B,qPAAqP","sources":["./src/app/C5_definition-joueur/C5_definition-joueur-routing.module.ts","./src/app/C5_definition-joueur/C5_definition-joueur.module.ts","./src/app/C5_definition-joueur/C5_definition-joueur.page.ts","./src/app/C5_definition-joueur/C5_definition-joueur.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { C5_DefinitionJoueurPage } from './C5_definition-joueur.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: C5_DefinitionJoueurPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DefinitionJoueurPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DefinitionJoueurPageRoutingModule } from './C5_definition-joueur-routing.module';\n\nimport { C5_DefinitionJoueurPage } from './C5_definition-joueur.page';\n\nimport { Routes,RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DefinitionJoueurPageRoutingModule,\n    RouterModule\n  ],\n  exports: [RouterModule],\n  declarations: [C5_DefinitionJoueurPage]\n})\nexport class DefinitionJoueurPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OfflineService } from '../services/offline.service'; //import service\nimport { AlertController, ModalController } from '@ionic/angular'; //import modalController\nimport { Router } from '@angular/router'; // import Router\nimport { Joueur } from '../classes/joueur'; // import Joueur class\n\n@Component({\n  selector: 'app-definition-joueur',\n  templateUrl: './C5_definition-joueur.page.html',\n  styleUrls: ['./C5_definition-joueur.page.scss'],\n})\nexport class C5_DefinitionJoueurPage implements OnInit {\n\n    joueurs:Array<Joueur>;\n    mot:string;\n    idMj:number;\n    indexJoueur:number=0;\n\n  // inject service, ModalController (to dismiss modals) and router (to navigate to new route at the end)\n  constructor(private service:OfflineService, public modalController:ModalController, private router: Router, private alert:AlertController) { }\n\n  ngOnInit() {\n    // Retrieve current word from service\n    this.mot = this.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].mot_choisi;\n    // Retrieve array of players\n    this.joueurs = this.service.joueurs;\n    //Retrieve id of current Game Master (MJ)\n    this.idMj = this.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].id_mj;\n  }\n\n  //on dismiss Modal\n  dismiss(index:number){\n\t\t// debugger;\n    if ((<HTMLIonTextareaElement>document.getElementById(\"definition\"+index)).value == \"\"){\n      this.alert.create({\n        header:\"Erreur\",\n        message:\"Merci de saisir une définition !\",\n        buttons:['OK']\n      }).then( res=>{\n        res.present();\n      })\n    } else {\n\t\t\tthis.indexJoueur++; // increment indexJoueur\n\t\t\t// We retrieve current player's definition and put it in the service\n\t\t\tfor (let b=0;b<this.joueurs.length;b++){\n\t\t\t\tif (this.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].resultat[b].id_joueur == index){\n\t\t\t\t\tthis.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].resultat[b].definition = (<HTMLIonTextareaElement>document.getElementById(\"definition\"+index)).value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Also retrieve player's id\n\t\t\t// this.service.manches[this.service.mancheEnCours].tours[this.service.toursEnCours].resultat[index].id_joueur = \n\t\t\t// this.joueurs[index].id_joueur;\n\t\t\t\n\t\t\t//Check : if we get to the last modal, we navigate to next page and dismiss modal ; else, just dismiss current modal.\n\t\t\tif(this.indexJoueur == this.joueurs.length -1){\n\t\t\t\tthis.indexJoueur = 0;\n\t\t\t\tthis.router.navigate(['propositions']);\n\t\t\t\tthis.modalController.dismiss();\n\t\t\t} else {\n\t\t\t\tthis.modalController.dismiss();\n\t\t\t}\n\t\t}\n\t}\n\n\tionViewWillEnter(){\n\t\tconsole.log(this.service.manches);\n\t}\n}\n","export default \"<ion-content>\\r\\n\\t<!-- We create a modal for every player, so player can input its definition. They're displayed on top of each other and so hide each other. -->\\r\\n\\t<ng-container *ngFor=\\\"let joueur of joueurs ; let indexElement = index\\\">\\r\\n\\t\\t<!-- Only create element if player is NOT MJ -->\\r\\n\\t\\t<ion-modal *ngIf=\\\"idMj!=joueur.id_joueur\\\"\\r\\n\\t\\t[swipeToClose]=\\\"false\\\"\\r\\n\\t\\t[isOpen]=\\\"true\\\"\\r\\n\\t\\t>\\r\\n\\t\\t\\t<ng-template>\\r\\n\\t\\t\\t\\t<div class=\\\"main\\\">\\r\\n\\t\\t\\t\\t\\t<h1 class=\\\"ion-text-center\\\" id=\\\"{{joueur.id_joueur}}\\\">{{joueur.nom_joueur}}</h1>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"cadre ion-text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h2>{{mot}}</h2>\\r\\n\\t\\t\\t\\t\\t\\t<p>Quelle est ta définition ?</p>\\r\\n\\t\\t\\t\\t\\t\\t<!--input to enter the definition-->\\r\\n\\t\\t\\t\\t\\t\\t<ion-textarea rows=\\\"14\\\" id=\\\"{{'definition' + indexElement}}\\\" inputmode=\\\"text\\\"></ion-textarea>\\r\\n\\t\\t\\t\\t\\t\\t<ion-button (click)=\\\"dismiss(indexElement)\\\">Valider</ion-button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</ion-modal>\\r\\n\\t</ng-container>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"default-src_app_services_offline_service_ts.js","mappings":";;;;;;;;;;;;;;;;;AAA2C;AAE3C,6DAA6D;AACb;AAMhD,6JAA6J;IAKhJ,cAAc,SAAd,cAAc;IAWzB,YAAY;IAEZ;QAXA,YAAO,GAAe,EAAE,CAAC,CAAC,cAAc;QACxC,YAAO,GAAe,EAAE,CAAC,CAAC,aAAa;QAGvC,kBAAa,GAAQ,CAAC,CAAC;QACvB,iBAAY,GAAQ,CAAC,CAAC;QAOpB,IAAI,CAAC,IAAI,GAAG,oDAAI,CAAC,CAAC,8DAA8D;IAClF,CAAC;CAEF;;AAjBY,cAAc;IAH1B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAiB1B;AAjB0B","sources":["./src/app/services/offline.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n//imports word database from JSON local file (see note below)\r\nimport data from '../../assets/mots_rares.json';\r\n\r\n//import classes\r\nimport { Joueur } from '../classes/joueur';\r\nimport { Manche } from '../classes/manche';\r\n\r\n//!NOTE : added lines in tsconfig.json file to read JSON ; see source (https://medium.com/codeptivesolutions/how-to-import-json-file-in-angular-a2e012948479)\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfflineService {\r\n\r\n  joueurs:Array<Joueur>=[]; //Player Array\r\n  manches:Array<Manche>=[]; //Round Array\r\n  definition:string;\r\n\r\n  mancheEnCours:number=0;\r\n  toursEnCours:number=0;\r\n  // \"data\" declaration : automatically generated by VScode from JSON File definition\r\n  //#region \r\n  data: { licence: string; credits: string; data: ({ word: string; def: string; pronounc: string; lexinfo: string; def2?: undefined; examples?: undefined; def3?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; lexinfo: string; examples?: undefined; def3?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; lexinfo: string; examples: string; def2?: undefined; def3?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; lexinfo: string; examples: string; def3?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; lexinfo: string; examples?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; lexinfo: string; examples: string; def4?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; def4: string; lexinfo: string; examples?: undefined; def5?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; def4: string; def5: string; def6: string; lexinfo: string; examples?: undefined; example?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; def4: string; def5: string; lexinfo: string; examples?: undefined; def6?: undefined; example?: undefined; } | { word: string; def: string; example: string; pronounc: any; lexinfo: string; def2?: undefined; examples?: undefined; def3?: undefined; def4?: undefined; def5?: undefined; def6?: undefined; } | { word: string; def: string; pronounc: string; def2: string; def3: string; def4: string; lexinfo: string; examples: string; def5?: undefined; def6?: undefined; example?: undefined; })[]; };\r\n  //#endregion\r\n\r\n  constructor() {\r\n    this.data = data; //Loads \"data\" from JSON word file in service's data variable.\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"src_app_A5B3_loading_A5B3_loading_module_ts.js","mappings":"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","sources":["./src/app/A5B3_loading/A5B3_loading-routing.module.ts","./src/app/A5B3_loading/A5B3_loading.module.ts","./src/app/A5B3_loading/A5B3_loading.page.ts","./src/app/A5B3_loading/A5B3_loading.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { A5B3_LoadingPage } from './A5B3_loading.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: A5B3_LoadingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoadingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoadingPageRoutingModule } from './A5B3_loading-routing.module';\r\n\r\nimport { A5B3_LoadingPage } from './A5B3_loading.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoadingPageRoutingModule\r\n  ],\r\n  declarations: [A5B3_LoadingPage]\r\n})\r\nexport class LoadingPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Joueur } from '../classes/joueur';\r\nimport { PartieService } from '../services/partie.service';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './A5B3_loading.page.html',\r\n  styleUrls: ['./A5B3_loading.page.scss'],\r\n})\r\nexport class A5B3_LoadingPage implements OnInit {\r\n\r\n  message:string;\r\n  progress:number;\r\n  counter:number;\r\n  counter2:number=0;\r\n  partieEncours:number;\r\n  joueurs:Array<Joueur>=[];\r\n\r\n  constructor(private route:ActivatedRoute, private service:PartieService, private router:Router) {\r\n    this.partieEncours = this.service.partieEnCours;\r\n    this.counter = 0;\r\n    this.counter2 = 0;\r\n    //Retrieve param in current Route to switch status\r\n    this.route.queryParams.subscribe(param => {\r\n      switch(param[\"status\"]){\r\n        case \"definitionOK\": //When player has entered his definition\r\n          this.message = \"En attente des autres joueurs...\";\r\n          this.service.getPartie(this.partieEncours).subscribe(u => { //Retrieve total player count\r\n            this.counter2 = u.joueur.length;\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    this.joueurs = [];\r\n    //Retrieve param in current Route to switch status\r\n    this.route.queryParams.subscribe(param => {\r\n      switch(param[\"status\"]){\r\n        case \"definitionOK\": \r\n          this.waitingAllDefinition(this.service,this.router); //waiting for all definitions from all players before votes\r\n          break;\r\n        default:\r\n          this.waitingConnectedPlayers(this.service,this.router); //\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  waitingConnectedPlayers(service:PartieService,router:Router){\r\n    setTimeout(()=>{\r\n      console.log(\"check\");\r\n      service.getPartie(service.partieEnCours).subscribe(partie=>{ //Retreive players from DB\r\n        this.joueurs = partie.joueur; // Array of all expected players \r\n        const result = partie.joueur.filter(joueur => joueur.nom_joueur == null); // Array of players'name null in DB (not connected)\r\n        const joueursConnectes = partie.joueur.filter(joueur => joueur.nom_joueur != null); // Array of connected players (with a name in DB)\r\n        console.log(\"joueursCo : \"+joueursConnectes.length+ \", AllPlayers : \"+this.joueurs.length);\r\n        this.progress = joueursConnectes.length/this.joueurs.length; //progress bar \r\n        if (result.length > 0){ //if there are still player's not connected, we wait ...\r\n          console.log(\"toujours de la place\");\r\n          this.waitingConnectedPlayers(service,router);\r\n        } else { //if the array of not connected players is empty, the game start !\r\n          router.navigate([\"current-manche-online\"]);\r\n        }\r\n      })\r\n    },1000);\r\n  }\r\n\r\n  waitingAllDefinition(service:PartieService,router:Router){\r\n    setTimeout(()=>{\r\n      console.log(\"check\");\r\n      service.checkDefinitions(service.partieEnCours,service.mancheEnCours,service.tourEnCours).subscribe(reponse=>{\r\n        this.counter2 = reponse.nbJoueurs; //number total of players \r\n        this.counter = reponse.nbJoueurs - reponse.nbDefNull;//number of players who already complete the definition\r\n        this.progress = this.counter/this.counter2; //progress bar\r\n        if (reponse.nbDefNull > 0){ //if still definiton null, we wait until every one complete the definition\r\n          this.waitingAllDefinition(service,router);\r\n        }else{\r\n          this.router.navigate([\"online-proposition\"]);//when it's done, go to the propositions \r\n        }\r\n      })\r\n    },1000);\r\n  }\r\n}\r\n","export default \"<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <!-- waiting message -->\\r\\n        <h1>{{message}}</h1>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"joueurs.length > 0\\\">\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <h3>Joueurs connectés :</h3>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"counter2 !=0\\\">\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <!-- counter to know how many definition are complete -->\\r\\n        <p>Définitions remplies : {{counter}}/{{counter2}}</p>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\t\\t<ion-row>\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <!-- spinner-->\\r\\n        <ion-spinner name=\\\"lines\\\" color=\\\"light\\\"></ion-spinner>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <!-- progress bar -->\\r\\n        <ion-progress-bar [value]=\\\"progress\\\" color=\\\"light\\\"></ion-progress-bar>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngFor=\\\"let joueur of joueurs;let index = index\\\">\\r\\n      <ion-col class=\\\"ion-text-center\\\">\\r\\n        <!-- chips of players connected -->\\r\\n        <ion-chip *ngIf=\\\"joueur.nom_joueur != null\\\">\\r\\n          <ion-avatar>\\r\\n            <img src=\\\"../../assets/avatarexemple.jpg\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            {{joueur.nom_joueur}}\\r\\n          </ion-label>\\r\\n        </ion-chip>\\r\\n      </ion-col>\\r\\n    </ion-row>    \\r\\n  </ion-grid>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}